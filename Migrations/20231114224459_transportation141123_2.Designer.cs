// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransportationCore.Data;

#nullable disable

namespace TransportationCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231114224459_transportation141123_2")]
    partial class transportation141123_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Dtos.Planificacion.PlanificacionConsultaDetalleDto", b =>
                {
                    b.Property<long>("Clave")
                        .HasColumnType("bigint");

                    b.Property<string>("ClaveDET")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Descanso")
                        .HasColumnType("bit");

                    b.Property<string>("EmailGerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailSubGerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHasta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.Property<long>("IdCoordinador")
                        .HasColumnType("bigint");

                    b.Property<decimal>("IdDetallePlanificacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<long>("IdOperador")
                        .HasColumnType("bigint");

                    b.Property<decimal>("IdPlanificacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("IdSubGerente")
                        .HasColumnType("bigint");

                    b.Property<int>("IdTienda")
                        .HasColumnType("int");

                    b.Property<int>("IdZona")
                        .HasColumnType("int");

                    b.Property<int>("IdZonaSted")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCoordinador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreOperador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTienda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreZona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreZonaSted")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NumUnidades")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SubGerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tarifa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TarifaDescanso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tel1Gerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel1SubGerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel2Gerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel2SubGerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnidadesMaximas")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable((string)null);

                    b.ToView("PlanificacionDetalleGetByParameter", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Dtos.Productividad.ProductividadConsultaDetalleDto", b =>
                {
                    b.Property<string>("Accion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuentaBancaria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Descanso")
                        .HasColumnType("bit");

                    b.Property<decimal>("DescuentoTardanza")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Dia")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HoraFinEjecucion")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraFinPlanificacion")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicioEjecucion")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicioPlanificacion")
                        .HasColumnType("time");

                    b.Property<int>("HorasExtrasEnMinutos")
                        .HasColumnType("int");

                    b.Property<int?>("IdBanco")
                        .HasColumnType("int");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.Property<decimal>("IdDetallePlanificacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IdEjecucionPlanificacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<long>("IdOperador")
                        .HasColumnType("bigint");

                    b.Property<decimal>("IdPlanificacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdTienda")
                        .HasColumnType("int");

                    b.Property<decimal>("IncentivoFactura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Justificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MontoDiario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoHorasExtras")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreBanco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreOperador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTienda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumTarjeta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SMG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Spot")
                        .HasColumnType("int");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TardanzaEnMinutos")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("ProductividadConsultaDetalleDto", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Dtos.Productividad.ProductividadConsultaHeaderDto", b =>
                {
                    b.Property<string>("Coordinador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusPlanificacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHasta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Frecuencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FrecuenciaId")
                        .HasColumnType("int");

                    b.Property<long>("IdCoordinador")
                        .HasColumnType("bigint");

                    b.Property<decimal>("IdPlanificacion")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable((string)null);

                    b.ToView("PlanificacionGetByCoordinador", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Dtos.Reportes.ReporteConsumoGasolinaDto", b =>
                {
                    b.Property<DateTime>("FechaDispercion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIni")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdCoordinador")
                        .HasColumnType("bigint");

                    b.Property<long>("IdOperador")
                        .HasColumnType("bigint");

                    b.Property<long>("IdTienda")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreOperador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTienda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTarjeta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("ReporteImporteCombustibleAsignado", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Dtos.Reportes.ReporteVechiculosExtraUtilizadosDto", b =>
                {
                    b.Property<string>("Accion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateIni")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dia")
                        .HasColumnType("int");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.Property<long>("IdTienda")
                        .HasColumnType("bigint");

                    b.Property<long>("IdTipoVehiculo")
                        .HasColumnType("bigint");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTienda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTipoVehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalGeneral")
                        .HasColumnType("int");

                    b.Property<int>("TotalUnidadesSpot")
                        .HasColumnType("int");

                    b.Property<int>("TotalUnidadesUtilizadas")
                        .HasColumnType("int");

                    b.Property<int>("TotalUtilizadas")
                        .HasColumnType("int");

                    b.Property<int>("UnidadesSpot")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("ReporteVehiculosExtraUtilizados", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Dtos.Tienda.TiendaDetalleAsignacionDto", b =>
                {
                    b.Property<long>("Clave")
                        .HasColumnType("bigint");

                    b.Property<string>("ClaveDET")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailGerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailSubGerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.Property<long>("IdCoordinador")
                        .HasColumnType("bigint");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<long>("IdSubGerente")
                        .HasColumnType("bigint");

                    b.Property<int>("IdTienda")
                        .HasColumnType("int");

                    b.Property<int>("IdZona")
                        .HasColumnType("int");

                    b.Property<int>("IdZonaSted")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCoordinador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTienda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreZona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreZonaSted")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NumUnidades")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SubGerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tarifa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TarifaDescanso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tel1Gerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel1SubGerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel2Gerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel2SubGerente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnidadesMaximas")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable((string)null);

                    b.ToView("TiendasGetByParameter", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.AsignacionTarjeta", b =>
                {
                    b.Property<long>("IdTarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdTarjeta"));

                    b.Property<bool?>("Activa")
                        .HasColumnType("bit");

                    b.Property<long?>("IdEmpleado")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("MontoDiario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumTarjeta")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumeroInterno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TarjetaPrincipal")
                        .HasColumnType("bit");

                    b.HasKey("IdTarjeta");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("tbl_AsignacionTarjeta", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.AuditLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NewValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoBancos", b =>
                {
                    b.Property<int>("IdBanco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBanco"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("NombreBanco")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdBanco");

                    b.ToTable("tbl_CatalogoBancos", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoDias", b =>
                {
                    b.Property<int>("IdDia")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Siglas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDia");

                    b.ToTable("tbl_CatalogoDias", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoEstado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("IdZona")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdEstado");

                    b.HasIndex("IdZona");

                    b.ToTable("tbl_CatalogoEstado", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoMarcaVehiculos", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("IdTipo")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMarca");

                    b.HasIndex("IdTipo");

                    b.ToTable("tbl_CatalogoVehiculoMarca", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoModeloVehiculos", b =>
                {
                    b.Property<int>("IdModelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdModelo"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("IdMarca")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdModelo");

                    b.HasIndex("IdMarca");

                    b.ToTable("tbl_CatalogoVehiculoModelo", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoMunicipio", b =>
                {
                    b.Property<int>("IdMunicipio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMunicipio"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("NombreMunicipio")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdMunicipio");

                    b.HasIndex("IdEstado");

                    b.ToTable("tbl_CatalogoMunicipio", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoTipoVehiculos", b =>
                {
                    b.Property<int>("IdTipoVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoVehiculo"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("TipoVehiculo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoVehiculo");

                    b.ToTable("tbl_CatalogoTipoVehiculo", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CheckIn_CkeckOut", b =>
                {
                    b.Property<long>("IdCheck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdCheck"));

                    b.Property<string>("CheckIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckIn_PhotoCarroExterior_Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckIn_PhotoCarroInterior_Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckIn_PhotoPerfil_Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckIn_Photo_Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckOut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckOut_Photo2_Uniforme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckOut_Photo3_Factura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckOut_Photo_Perfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdEmpleado")
                        .HasColumnType("bigint");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<int?>("IdSucursalActual")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("height")
                        .HasColumnType("int");

                    b.Property<string>("status_Entrada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("width")
                        .HasColumnType("int");

                    b.HasKey("IdCheck");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("tbl_CheckIn_CheckOut", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Cliente", b =>
                {
                    b.Property<long>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdCliente"));

                    b.Property<long>("Clave")
                        .HasColumnType("bigint");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int?>("IdMunicipio")
                        .HasColumnType("int");

                    b.Property<int?>("IdZona")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Tarifa")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TarifaConAyudante")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TarifaHoraAdicional")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TarifaSpot")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdCliente");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdMunicipio");

                    b.HasIndex("IdZona");

                    b.ToTable("tbl_Cliente", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.ContactoCliente", b =>
                {
                    b.Property<long>("IdContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdContacto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoContacto")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdContacto");

                    b.HasIndex("IdCliente");

                    b.ToTable("tbl_ContactoCliente", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CoordinadorCliente", b =>
                {
                    b.Property<long>("IdCoordinador")
                        .HasColumnType("bigint");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdCoordinador", "IdCliente");

                    b.HasIndex("IdCliente");

                    b.ToTable("tbl_CoordinadorCliente", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.DetallePlanificacion", b =>
                {
                    b.Property<decimal>("IdPlanificacion")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("IdDetallePlanificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("IdDetallePlanificacion"));

                    b.Property<bool>("Descanso")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time(7)");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time(7)");

                    b.Property<long>("IdOperador")
                        .HasColumnType("bigint")
                        .HasColumnName("IdOperador");

                    b.Property<int>("IdTienda")
                        .HasColumnType("int")
                        .HasColumnName("IdTienda");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdPlanificacion", "IdDetallePlanificacion");

                    b.HasIndex("IdOperador");

                    b.HasIndex("IdTienda");

                    b.ToTable("tbl_DetallePlanificacion", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.DetalleTarjeta", b =>
                {
                    b.Property<int>("IdDetalleTarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleTarjeta"));

                    b.Property<DateTime?>("FechaDispension")
                        .HasColumnType("datetime");

                    b.Property<long?>("IdCordinador")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdEmpleado")
                        .HasColumnType("bigint");

                    b.Property<int?>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<long?>("IdTarjeta")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Importe")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdDetalleTarjeta");

                    b.HasIndex("IdCordinador");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdTarjeta");

                    b.ToTable("tbl_DetalleTarjeta", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.DirectorSubDirector", b =>
                {
                    b.Property<long>("IdSubDirector")
                        .HasColumnType("bigint");

                    b.Property<long>("IdDirector")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdSubDirector", "IdDirector");

                    b.HasIndex("IdDirector");

                    b.ToTable("tbl_DirectorSubDirector", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.EjecucionPlanificacion", b =>
                {
                    b.Property<decimal>("IdPlanificacion")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("IdEjecucionPlanificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("IdEjecucionPlanificacion"));

                    b.Property<bool>("Descanso")
                        .HasColumnType("bit");

                    b.Property<decimal>("DescuentoTardanza")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time(7)");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time(7)");

                    b.Property<decimal>("IdDetallePlanificacion")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<long>("IdOperador")
                        .HasColumnType("bigint")
                        .HasColumnName("IdOperador");

                    b.Property<int>("IdTienda")
                        .HasColumnType("int")
                        .HasColumnName("IdTienda");

                    b.Property<decimal>("IncentivoFactura")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Justificacion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Justificacion");

                    b.Property<decimal>("MontoCombustible")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MontoHorasExtras")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("TipoRegistro")
                        .HasColumnType("int")
                        .HasColumnName("TipoRegistro");

                    b.HasKey("IdPlanificacion", "IdEjecucionPlanificacion");

                    b.HasIndex("IdOperador");

                    b.HasIndex("IdTienda");

                    b.ToTable("tbl_EjecucionPlanificacion", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Empleado", b =>
                {
                    b.Property<long>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdEmpleado"));

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApellidoPaterno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int");

                    b.Property<int?>("IdSegmento")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoEmpleado")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NumeroContrato")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("SMG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("IdMunicipio");

                    b.ToTable("tbl_Empleados", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.EmpleadoCoordinador", b =>
                {
                    b.Property<long>("IdOperador")
                        .HasColumnType("bigint");

                    b.Property<long>("IdCoordinador")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdOperador", "IdCoordinador");

                    b.HasIndex("IdCoordinador");

                    b.ToTable("tbl_EmpleadoCoordinador", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.EmpleadoCuentaBancaria", b =>
                {
                    b.Property<long>("IdCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdCuenta"));

                    b.Property<bool?>("Activa")
                        .HasColumnType("bit");

                    b.Property<string>("CuentaBancaria")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("CuentaPrincipal")
                        .HasColumnType("bit");

                    b.Property<int>("IdBanco")
                        .HasColumnType("int");

                    b.Property<long?>("IdEmpleado")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdCuenta");

                    b.HasIndex("IdBanco");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("tbl_EmpleadoCuentaBancaria", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Formato", b =>
                {
                    b.Property<int>("IdFormato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFormato"));

                    b.Property<string>("DescripcionFormato")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdFormato");

                    b.ToTable("tbl_Formato", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.FormatoCliente", b =>
                {
                    b.Property<int>("IdFormato")
                        .HasColumnType("int");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdFormato", "IdCliente");

                    b.HasIndex("IdCliente");

                    b.ToTable("tbl_FormatoCliente", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.GerenteSubGerente", b =>
                {
                    b.Property<long>("IdGerente")
                        .HasColumnType("bigint");

                    b.Property<long>("IdSubGerente")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdGerente", "IdSubGerente");

                    b.HasIndex("IdSubGerente");

                    b.ToTable("tbl_GerenteSubGerente", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.HorarioEmpleado", b =>
                {
                    b.Property<long>("IdHorario")
                        .HasColumnType("bigint");

                    b.Property<long>("IdEmpleado")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdHorario", "IdEmpleado");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("tbl_HorarioEmpleado", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Horarios", b =>
                {
                    b.Property<long>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdHorario"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("IdDia")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdHorario");

                    b.HasIndex("IdDia");

                    b.ToTable("tbl_Horario", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.MunicipioCliente", b =>
                {
                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdMunicipio", "IdCliente");

                    b.HasIndex("IdCliente");

                    b.ToTable("tbl_MunicipioCliente", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Planificacion", b =>
                {
                    b.Property<decimal>("IdPlanificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("IdPlanificacion"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EstatusPlanificacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDesde")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaHasta")
                        .HasColumnType("date");

                    b.Property<int>("FrecuenciaId")
                        .HasColumnType("int");

                    b.Property<long>("IdCoordinador")
                        .HasColumnType("bigint")
                        .HasColumnName("IdCoordinador");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdPlanificacion");

                    b.HasIndex("IdCoordinador");

                    b.ToTable("tbl_Planificacion", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.SubDirectorCoordinador", b =>
                {
                    b.Property<long>("IdSubDirector")
                        .HasColumnType("bigint");

                    b.Property<long>("IdCoordinador")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdSubDirector", "IdCoordinador");

                    b.HasIndex("IdCoordinador");

                    b.ToTable("tbl_SubDirectorCoordinador", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.TarifasTipoVehiculo", b =>
                {
                    b.Property<int>("IdTarifa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTarifa"));

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<int>("IdTipoVehiculo")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("Principal")
                        .HasColumnType("bit");

                    b.Property<decimal>("Tarifa")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdTarifa");

                    b.HasIndex("IdTipoVehiculo");

                    b.ToTable("tbl_TarifasTipoVehiculo", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Tienda", b =>
                {
                    b.Property<int>("IdTienda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTienda"));

                    b.Property<bool?>("Activa")
                        .HasColumnType("bit");

                    b.Property<int?>("CntEmpleadosExterno")
                        .HasColumnType("int");

                    b.Property<int?>("CntEmpleadosInterno")
                        .HasColumnType("int");

                    b.Property<int?>("CntEmpleadosSpot")
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<long>("IdSubGerente")
                        .HasColumnType("bigint");

                    b.Property<int>("IdZonaSted")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("NombreTienda")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("NumUnidades")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Tarifa")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TarifaDescanso")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("UnidadesMaximas")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdTienda");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdZonaSted");

                    b.ToTable("tbl_Tienda", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.TiendaCoordinador", b =>
                {
                    b.Property<long>("IdCoordinador")
                        .HasColumnType("bigint");

                    b.Property<int>("IdTienda")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdCoordinador", "IdTienda");

                    b.HasIndex("IdTienda");

                    b.ToTable("tbl_TiendaCoordinador", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.ValidateUserAccount", b =>
                {
                    b.Property<int>("IdValidarCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdValidarCuenta"));

                    b.Property<string>("CodigoVerficacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoEmpleado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdEmpleado")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TipoCodigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("fechaExpiracion")
                        .HasColumnType("datetime");

                    b.HasKey("IdValidarCuenta");

                    b.ToTable("tbl_ValidateUserAccount", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Vehiculo", b =>
                {
                    b.Property<long>("IdVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdVehiculo"));

                    b.Property<int?>("EmisionVehiculo")
                        .HasColumnType("int");

                    b.Property<int?>("IdMarcaVehiculo")
                        .HasColumnType("int");

                    b.Property<int?>("IdModeloVehiculo")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoVehiculo")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("NombreVehiculo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Tarifa")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool?>("VehiculoEmpresa")
                        .HasColumnType("bit");

                    b.HasKey("IdVehiculo");

                    b.HasIndex("IdMarcaVehiculo");

                    b.HasIndex("IdModeloVehiculo");

                    b.HasIndex("IdTipoVehiculo");

                    b.ToTable("tbl_Vehiculo", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.VehiculoOperador", b =>
                {
                    b.Property<long>("IdVehiculo")
                        .HasColumnType("bigint");

                    b.Property<long>("IdEmpleado")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdVehiculo", "IdEmpleado");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("tbl_VehiculoOperador", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Zona", b =>
                {
                    b.Property<int>("IdZona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZona"));

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<string>("ClaveDET")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("NombreZona")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdZona");

                    b.ToTable("tbl_Zona", (string)null);
                });

            modelBuilder.Entity("TransportationCore.Data.Models.ZonaSted", b =>
                {
                    b.Property<int>("IdZonaSted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZonaSted"));

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<string>("ClaveDET")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("NombreZona")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdZonaSted");

                    b.HasIndex("IdCliente");

                    b.ToTable("tbl_ZonaSted", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TransportationCore.Data.Models.AsignacionTarjeta", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Empleado", "Empleado")
                        .WithMany("AsignacionTarjetas")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_AsignacionTarjeta_Empleados");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoEstado", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Zona", "Zona")
                        .WithMany("Estados")
                        .HasForeignKey("IdZona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Estados_Zona");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoMarcaVehiculos", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.CatalogoTipoVehiculos", "TipoVehiculos")
                        .WithMany("MarcaVehiculos")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_VehiculoMarca_TipoVehiculo");

                    b.Navigation("TipoVehiculos");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoModeloVehiculos", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.CatalogoMarcaVehiculos", "MarcaVehiculos")
                        .WithMany("ModeloVehiculos")
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_VehiculoModelo_VehiculoMarca");

                    b.Navigation("MarcaVehiculos");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoMunicipio", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.CatalogoEstado", "Estado")
                        .WithMany("Municipios")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Municipio_Estado");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CheckIn_CkeckOut", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Empleado", "Empleados")
                        .WithMany("CheckIn_CkeckOut")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CheckIn_CheckOut_Empleado");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Cliente", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.CatalogoEstado", "Estado")
                        .WithMany("Clientes")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Clientes_Estado");

                    b.HasOne("TransportationCore.Data.Models.CatalogoMunicipio", "Municipio")
                        .WithMany("Clientes")
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Clientes_Municipio");

                    b.HasOne("TransportationCore.Data.Models.Zona", "Zona")
                        .WithMany()
                        .HasForeignKey("IdZona");

                    b.Navigation("Estado");

                    b.Navigation("Municipio");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.ContactoCliente", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Cliente", "Cliente")
                        .WithMany("ContactoCliente")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Contacto_Cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CoordinadorCliente", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Cliente", "Cliente")
                        .WithMany("CoordinadorCliente")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CoordinadorCliente_Cliente");

                    b.HasOne("TransportationCore.Data.Models.Empleado", "Coordinador")
                        .WithMany("CoordinadorCliente")
                        .HasForeignKey("IdCoordinador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CoordinadorCliente_Coordinador");

                    b.Navigation("Cliente");

                    b.Navigation("Coordinador");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.DetallePlanificacion", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Empleado", "Operador")
                        .WithMany("DetallePlanificacion")
                        .HasForeignKey("IdOperador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_DetallePlanificacion_Operador");

                    b.HasOne("TransportationCore.Data.Models.Planificacion", "Planificacion")
                        .WithMany("DetallesPlanificacion")
                        .HasForeignKey("IdPlanificacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Detalle_Planificacion");

                    b.HasOne("TransportationCore.Data.Models.Tienda", "Tienda")
                        .WithMany("DetallePlanificacion")
                        .HasForeignKey("IdTienda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operador");

                    b.Navigation("Planificacion");

                    b.Navigation("Tienda");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.DetalleTarjeta", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Empleado", "Cordinador")
                        .WithMany("DetalleTarjetaCordinador")
                        .HasForeignKey("IdCordinador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_DetalleTarjeta_Coordinador");

                    b.HasOne("TransportationCore.Data.Models.Empleado", "Empleado")
                        .WithMany("DetalleTarjetaEmpleado")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_DetalleTarjeta_Empleado");

                    b.HasOne("TransportationCore.Data.Models.AsignacionTarjeta", "Tarjeta")
                        .WithMany("DetalleTarjetas")
                        .HasForeignKey("IdTarjeta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_DetalleTarjeta_AsignacionTarjeta");

                    b.Navigation("Cordinador");

                    b.Navigation("Empleado");

                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.DirectorSubDirector", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Empleado", "Empleado")
                        .WithMany("DirectorSubDirectores")
                        .HasForeignKey("IdDirector")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_DirectorSubDirector_Director");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.EjecucionPlanificacion", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Empleado", "Operador")
                        .WithMany("EjecucionPlanificacion")
                        .HasForeignKey("IdOperador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_EjecucionPlanificacion_Operador");

                    b.HasOne("TransportationCore.Data.Models.Planificacion", "Planificacion")
                        .WithMany("EjecucionesPlanificacion")
                        .HasForeignKey("IdPlanificacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ejecucion_Planificacion");

                    b.HasOne("TransportationCore.Data.Models.Tienda", "Tienda")
                        .WithMany("EjecucionPlanificacion")
                        .HasForeignKey("IdTienda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operador");

                    b.Navigation("Planificacion");

                    b.Navigation("Tienda");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Empleado", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.CatalogoMunicipio", "Municipio")
                        .WithMany("Empleados")
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Empleados_Municipio");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.EmpleadoCoordinador", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Empleado", "Empleado")
                        .WithMany("EmpleadoCoordinadores")
                        .HasForeignKey("IdCoordinador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_EmpleadoCoordinador_Coordinador");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.EmpleadoCuentaBancaria", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.CatalogoBancos", "Bancos")
                        .WithMany("EmpleadoCuentasBancarias")
                        .HasForeignKey("IdBanco")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_EmpleadoCuentaBancaria_Bancos");

                    b.HasOne("TransportationCore.Data.Models.Empleado", "Empleados")
                        .WithMany("EmpleadoCuentasBancarias")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_EmpleadoCuentaBancaria_Empleados");

                    b.Navigation("Bancos");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.FormatoCliente", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Cliente", "Cliente")
                        .WithMany("FormatoClientes")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_FormatoCliente_Cliente");

                    b.HasOne("TransportationCore.Data.Models.Formato", "Formato")
                        .WithMany("FormatoClientes")
                        .HasForeignKey("IdFormato")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_FormatoCliente_Formato");

                    b.Navigation("Cliente");

                    b.Navigation("Formato");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.GerenteSubGerente", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.ContactoCliente", "Contacto")
                        .WithMany("GerenteSubGerentes")
                        .HasForeignKey("IdSubGerente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Contacto_SubGerentes");

                    b.Navigation("Contacto");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.HorarioEmpleado", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Empleado", "Empleado")
                        .WithMany("HorarioEmpleados")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_HorarioEmpleado_Empleado");

                    b.HasOne("TransportationCore.Data.Models.Horarios", "Horario")
                        .WithMany("HorarioEmpleados")
                        .HasForeignKey("IdHorario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_HorarioEmpleado_Horario");

                    b.Navigation("Empleado");

                    b.Navigation("Horario");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Horarios", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.CatalogoDias", "Dias")
                        .WithMany("Horarios")
                        .HasForeignKey("IdDia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Horario_Dias");

                    b.Navigation("Dias");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.MunicipioCliente", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Cliente", "Cliente")
                        .WithMany("MunicipioClientes")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_MunicipioCliente_Cliente");

                    b.HasOne("TransportationCore.Data.Models.CatalogoMunicipio", "Municipio")
                        .WithMany("MunicipioClientes")
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_MunicipioCliente_Formato");

                    b.Navigation("Cliente");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Planificacion", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Empleado", "Coordinador")
                        .WithMany("Planificacion")
                        .HasForeignKey("IdCoordinador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Planificacion_Coordinador");

                    b.Navigation("Coordinador");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.SubDirectorCoordinador", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Empleado", "Empleado")
                        .WithMany("SubDirectorCoordinadores")
                        .HasForeignKey("IdCoordinador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SubDirectorCoordinador_Coordinador");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.TarifasTipoVehiculo", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.CatalogoTipoVehiculos", "TipoVehiculos")
                        .WithMany("Tarifas")
                        .HasForeignKey("IdTipoVehiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Tarifa_TipoVehiculo");

                    b.Navigation("TipoVehiculos");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Tienda", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.CatalogoEstado", "Estado")
                        .WithMany("Tiendas")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Tienda_Estado");

                    b.HasOne("TransportationCore.Data.Models.ZonaSted", "ZonaSted")
                        .WithMany("Tiendas")
                        .HasForeignKey("IdZonaSted")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ZonaSted_Tienda");

                    b.Navigation("Estado");

                    b.Navigation("ZonaSted");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.TiendaCoordinador", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Empleado", "Coordinador")
                        .WithMany("TiendaCoordinadores")
                        .HasForeignKey("IdCoordinador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TiendaCoordinador_Coordinador");

                    b.HasOne("TransportationCore.Data.Models.Tienda", "Tienda")
                        .WithMany("TiendaCoordinadores")
                        .HasForeignKey("IdTienda")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TiendaCoordinador_Tienda");

                    b.Navigation("Coordinador");

                    b.Navigation("Tienda");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Vehiculo", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.CatalogoMarcaVehiculos", "MarcaVehiculo")
                        .WithMany("Vehiculos")
                        .HasForeignKey("IdMarcaVehiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Vehiculo_Marca");

                    b.HasOne("TransportationCore.Data.Models.CatalogoModeloVehiculos", "ModeloVehiculo")
                        .WithMany("Vehiculos")
                        .HasForeignKey("IdModeloVehiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Vehiculo_Modelo");

                    b.HasOne("TransportationCore.Data.Models.CatalogoTipoVehiculos", "TipoVehiculo")
                        .WithMany("Vehiculos")
                        .HasForeignKey("IdTipoVehiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Vehiculo_TipoVehiculo");

                    b.Navigation("MarcaVehiculo");

                    b.Navigation("ModeloVehiculo");

                    b.Navigation("TipoVehiculo");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.VehiculoOperador", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Empleado", "Empleado")
                        .WithMany("VehiculosOperadores")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_VehiculoOperador_Empleados");

                    b.HasOne("TransportationCore.Data.Models.Vehiculo", "Vehiculo")
                        .WithMany("VehiculosOperadores")
                        .HasForeignKey("IdVehiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_VehiculoOperador_Operador");

                    b.Navigation("Empleado");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.ZonaSted", b =>
                {
                    b.HasOne("TransportationCore.Data.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.AsignacionTarjeta", b =>
                {
                    b.Navigation("DetalleTarjetas");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoBancos", b =>
                {
                    b.Navigation("EmpleadoCuentasBancarias");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoDias", b =>
                {
                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoEstado", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Municipios");

                    b.Navigation("Tiendas");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoMarcaVehiculos", b =>
                {
                    b.Navigation("ModeloVehiculos");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoModeloVehiculos", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoMunicipio", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("MunicipioClientes");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.CatalogoTipoVehiculos", b =>
                {
                    b.Navigation("MarcaVehiculos");

                    b.Navigation("Tarifas");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Cliente", b =>
                {
                    b.Navigation("ContactoCliente");

                    b.Navigation("CoordinadorCliente");

                    b.Navigation("FormatoClientes");

                    b.Navigation("MunicipioClientes");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.ContactoCliente", b =>
                {
                    b.Navigation("GerenteSubGerentes");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Empleado", b =>
                {
                    b.Navigation("AsignacionTarjetas");

                    b.Navigation("CheckIn_CkeckOut");

                    b.Navigation("CoordinadorCliente");

                    b.Navigation("DetallePlanificacion");

                    b.Navigation("DetalleTarjetaCordinador");

                    b.Navigation("DetalleTarjetaEmpleado");

                    b.Navigation("DirectorSubDirectores");

                    b.Navigation("EjecucionPlanificacion");

                    b.Navigation("EmpleadoCoordinadores");

                    b.Navigation("EmpleadoCuentasBancarias");

                    b.Navigation("HorarioEmpleados");

                    b.Navigation("Planificacion");

                    b.Navigation("SubDirectorCoordinadores");

                    b.Navigation("TiendaCoordinadores");

                    b.Navigation("VehiculosOperadores");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Formato", b =>
                {
                    b.Navigation("FormatoClientes");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Horarios", b =>
                {
                    b.Navigation("HorarioEmpleados");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Planificacion", b =>
                {
                    b.Navigation("DetallesPlanificacion");

                    b.Navigation("EjecucionesPlanificacion");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Tienda", b =>
                {
                    b.Navigation("DetallePlanificacion");

                    b.Navigation("EjecucionPlanificacion");

                    b.Navigation("TiendaCoordinadores");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Vehiculo", b =>
                {
                    b.Navigation("VehiculosOperadores");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.Zona", b =>
                {
                    b.Navigation("Estados");
                });

            modelBuilder.Entity("TransportationCore.Data.Models.ZonaSted", b =>
                {
                    b.Navigation("Tiendas");
                });
#pragma warning restore 612, 618
        }
    }
}
